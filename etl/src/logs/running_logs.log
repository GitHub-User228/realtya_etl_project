[2024-07-16 12:00:02,456: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 12:00:02,457: 64: logger: INFO: etl_pipeline: === STARTING ETL PIPELINE ===]
[2024-07-16 12:00:02,480: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 12:00:02,501: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 12:00:02,501: 145: logger: INFO: parser: STARTING PARSING STAGE]

  0%|          | 0/25 [00:00<?, ?it/s]
  0%|          | 0/25 [00:00<?, ?it/s, content_size=0, skipped=0]
  0%|          | 0/25 [00:29<?, ?it/s, content_size=26, skipped=0]
  4%|▍         | 1/25 [00:29<11:54, 29.78s/it, content_size=26, skipped=0]
  4%|▍         | 1/25 [00:59<11:54, 29.78s/it, content_size=52, skipped=0]
  8%|▊         | 2/25 [00:59<11:24, 29.76s/it, content_size=52, skipped=0]
  8%|▊         | 2/25 [01:28<11:24, 29.76s/it, content_size=78, skipped=0]
 12%|█▏        | 3/25 [01:28<10:49, 29.53s/it, content_size=78, skipped=0]
 12%|█▏        | 3/25 [02:00<10:49, 29.53s/it, content_size=104, skipped=0]
 16%|█▌        | 4/25 [02:00<10:36, 30.32s/it, content_size=104, skipped=0]
 16%|█▌        | 4/25 [02:32<10:36, 30.32s/it, content_size=130, skipped=0]
 20%|██        | 5/25 [02:32<10:18, 30.92s/it, content_size=130, skipped=0]
 20%|██        | 5/25 [03:03<10:18, 30.92s/it, content_size=156, skipped=0]
 24%|██▍       | 6/25 [03:03<09:48, 30.99s/it, content_size=156, skipped=0]
 24%|██▍       | 6/25 [03:35<09:48, 30.99s/it, content_size=181, skipped=0]
 28%|██▊       | 7/25 [03:35<09:24, 31.38s/it, content_size=181, skipped=0]
 28%|██▊       | 7/25 [04:08<09:24, 31.38s/it, content_size=207, skipped=0]
 32%|███▏      | 8/25 [04:08<09:00, 31.82s/it, content_size=207, skipped=0]
 32%|███▏      | 8/25 [04:40<09:00, 31.82s/it, content_size=233, skipped=0]
 36%|███▌      | 9/25 [04:40<08:29, 31.86s/it, content_size=233, skipped=0]
 36%|███▌      | 9/25 [05:11<08:29, 31.86s/it, content_size=258, skipped=0]
 40%|████      | 10/25 [05:11<07:55, 31.73s/it, content_size=258, skipped=0]
 40%|████      | 10/25 [05:45<07:55, 31.73s/it, content_size=284, skipped=0]
 44%|████▍     | 11/25 [05:45<07:34, 32.46s/it, content_size=284, skipped=0]
 44%|████▍     | 11/25 [06:18<07:34, 32.46s/it, content_size=309, skipped=0]
 48%|████▊     | 12/25 [06:18<07:04, 32.63s/it, content_size=309, skipped=0]
 48%|████▊     | 12/25 [06:52<07:04, 32.63s/it, content_size=335, skipped=0]
 52%|█████▏    | 13/25 [06:52<06:35, 32.96s/it, content_size=335, skipped=0]
 52%|█████▏    | 13/25 [07:24<06:35, 32.96s/it, content_size=361, skipped=0]
 56%|█████▌    | 14/25 [07:24<05:58, 32.60s/it, content_size=361, skipped=0]
 56%|█████▌    | 14/25 [07:57<05:58, 32.60s/it, content_size=387, skipped=0]
 60%|██████    | 15/25 [07:57<05:27, 32.78s/it, content_size=387, skipped=0]
 60%|██████    | 15/25 [08:28<05:27, 32.78s/it, content_size=413, skipped=0]
 64%|██████▍   | 16/25 [08:28<04:50, 32.24s/it, content_size=413, skipped=0]
 64%|██████▍   | 16/25 [09:00<04:50, 32.24s/it, content_size=439, skipped=0]
 68%|██████▊   | 17/25 [09:00<04:16, 32.06s/it, content_size=439, skipped=0]
 68%|██████▊   | 17/25 [09:33<04:16, 32.06s/it, content_size=465, skipped=0]
 72%|███████▏  | 18/25 [09:33<03:46, 32.29s/it, content_size=465, skipped=0]
 72%|███████▏  | 18/25 [10:03<03:46, 32.29s/it, content_size=491, skipped=0]
 76%|███████▌  | 19/25 [10:03<03:11, 31.88s/it, content_size=491, skipped=0]
 76%|███████▌  | 19/25 [10:37<03:11, 31.88s/it, content_size=517, skipped=0]
 80%|████████  | 20/25 [10:37<02:41, 32.24s/it, content_size=517, skipped=0]
 80%|████████  | 20/25 [11:08<02:41, 32.24s/it, content_size=543, skipped=0]
 84%|████████▍ | 21/25 [11:08<02:08, 32.10s/it, content_size=543, skipped=0]
 84%|████████▍ | 21/25 [11:42<02:08, 32.10s/it, content_size=569, skipped=0]
 88%|████████▊ | 22/25 [11:42<01:37, 32.56s/it, content_size=569, skipped=0]
 88%|████████▊ | 22/25 [12:16<01:37, 32.56s/it, content_size=595, skipped=0]
 92%|█████████▏| 23/25 [12:16<01:05, 32.90s/it, content_size=595, skipped=0]
 92%|█████████▏| 23/25 [12:46<01:05, 32.90s/it, content_size=621, skipped=0]
 96%|█████████▌| 24/25 [12:46<00:32, 32.23s/it, content_size=621, skipped=0]
 96%|█████████▌| 24/25 [13:19<00:32, 32.23s/it, content_size=647, skipped=0]
100%|██████████| 25/25 [13:19<00:00, 32.32s/it, content_size=647, skipped=0]
100%|██████████| 25/25 [13:19<00:00, 31.97s/it, content_size=647, skipped=0]
[2024-07-16 12:13:21,847: 207: logger: INFO: parser: Number of parsed observations: 647]
[2024-07-16 12:13:21,847: 208: logger: INFO: parser: Number of skipped observations: 0]
[2024-07-16 12:13:21,847: 209: logger: INFO: parser: Number of viewed pages: 25]
[2024-07-16 12:13:21,851: 234: logger: INFO: parser: ENDING PARSING STAGE]

[2024-07-16 12:13:22,105: 493: logger: INFO: utils: Table realty has been appended to the existing table to the source database]
[2024-07-16 12:13:22,105: 289: logger: INFO: transformer: STARTING TRANSFORMING STAGE]
[2024-07-16 12:13:22,111: 316: logger: INFO: transformer: Feature flat_type has been transformed]
[2024-07-16 12:13:22,121: 316: logger: INFO: transformer: Feature main_info has been transformed]
[2024-07-16 12:13:22,129: 316: logger: INFO: transformer: Feature fee_info has been transformed]
[2024-07-16 12:13:22,169: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 12:13:34,509: 493: logger: INFO: utils: Table addresses has been appended to the existing table to the source database]
[2024-07-16 12:13:34,516: 316: logger: INFO: transformer: Feature address_info has been transformed]
[2024-07-16 12:13:34,552: 316: logger: INFO: transformer: Feature extra_features has been transformed]
[2024-07-16 12:13:34,553: 335: logger: INFO: transformer: ENDING TRANSFORMING STAGE]
[2024-07-16 12:13:34,715: 493: logger: INFO: utils: Table realty has been appended to the existing table to the destination database]
[2024-07-16 12:13:34,715: 158: logger: INFO: etl_pipeline: === ENDING ETL PIPELINE ===]
[2024-07-16 12:52:47,548: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 12:53:48,709: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 12:53:49,007: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 13:13:39,835: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 13:13:39,923: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 13:14:43,152: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 13:14:43,248: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 13:14:53,170: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 13:14:53,270: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 13:21:39,450: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:21:39,459: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:22:31,033: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 13:22:31,123: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 13:23:06,480: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:23:06,488: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:23:56,302: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:23:56,310: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:50,545: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:50,552: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:51,570: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:51,577: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:51,692: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:31:51,701: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:16,350: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:35,105: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:35,115: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:36,291: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:36,300: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:36,446: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:35:36,455: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:18,793: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:18,803: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:19,989: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:19,998: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:20,129: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:20,137: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:58,066: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:58,075: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:58,196: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:36:58,204: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 13:54:16,280: 451: logger: INFO: utils: An exception occured while reading table addresses from the destination database. Error: (psycopg2.errors.UndefinedTable) relation "addresses" does not exist
LINE 1: SELECT * FROM addresses
                      ^

[SQL: SELECT * FROM addresses]
(Background on this error at: https://sqlalche.me/e/20/f405)]
[2024-07-16 13:54:21,502: 451: logger: INFO: utils: An exception occured while reading table adresses from the destination database. Error: (psycopg2.errors.UndefinedTable) relation "adresses" does not exist
LINE 1: SELECT * FROM adresses
                      ^

[SQL: SELECT * FROM adresses]
(Background on this error at: https://sqlalche.me/e/20/f405)]
[2024-07-16 13:54:46,093: 451: logger: INFO: utils: An exception occured while reading table addresses from the destination database. Error: (psycopg2.errors.UndefinedTable) relation "addresses" does not exist
LINE 1: SELECT * FROM addresses
                      ^

[SQL: SELECT * FROM addresses]
(Background on this error at: https://sqlalche.me/e/20/f405)]
[2024-07-16 13:55:22,206: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 13:55:51,245: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 13:55:56,350: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 15:16:30,428: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:16:30,548: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:21:58,083: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:21:58,172: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:26:40,200: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 15:26:40,484: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:26:40,575: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:27:24,375: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 15:27:24,529: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:27:24,619: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:45:16,033: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:45:16,205: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:45:19,957: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:45:19,967: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:45:20,531: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:45:20,539: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:50,192: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 15:48:50,281: 446: logger: INFO: utils: Table realty has been read from the destination database]
[2024-07-16 15:48:53,813: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:53,822: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:55,055: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:55,064: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:55,177: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:48:55,185: 223: matplotlib.category: INFO: category: Using categorical units to plot a list of strings that are all parsable as floats or dates. If these strings should be plotted as numbers, cast to the appropriate data type before plotting.]
[2024-07-16 15:50:52,322: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 15:51:06,997: 446: logger: INFO: utils: Table addresses has been read from the source database]
[2024-07-16 16:32:08,131: 313: logger: INFO: utils: yaml file: /home/etl_project/src/etl/config.yaml loaded successfully]
[2024-07-16 16:32:08,136: 18: logger: INFO: scheduler: Existing cron jobs has been removed]
[2024-07-16 16:32:08,149: 28: logger: INFO: scheduler: ETL job has been added]
